<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>